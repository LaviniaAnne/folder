<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd 
		http://www.springframework.org/schema/beans  
 		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		">


	<import resource="../config/context.xml" />

	<bean id="domain" class="com.samplebatch.Domain" />

	<job id="readMultiFileJob" xmlns="http://www.springframework.org/schema/batch">

		<step id="step1">
			<tasklet>
<!--  				<chunk reader="multiResourceItemReader" writer="mysqlItemWriter" -->
<!-- 					commit-interval="1" /> -->
			<chunk reader="flatFileItemReader" writer="flatFileItemWriter"
					commit-interval="1" />
					</tasklet>
		</step>

   </job>

<!-- 	<bean id="multiResourceItemReader" -->
<!-- 		class=" org.springframework.batch.item.file.MultiResourceItemReader"> -->
<!-- 		<property name="resources" value="file:res/inputs/Details.txt" /> -->
<!-- 		<property name="delegate" ref="flatFileItemReader" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"> -->
<!--      <property name="resources" value="file:res/inputs/Details.txt" /> -->
<!-- 		<property name="delegate" ref="flatFileItemReader" /> -->
<!-- 		<property name="lineMapper"> -->
<!-- 			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper"> -->


<!--  			    <property name="lineTokenizer" ref="flatFileTokenizer"/>   -->
				 
<!-- 				<property name="fieldSetMapper"> -->
<!-- 					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper"> -->
<!-- 						<property name="prototypeBeanName" value="domain" /> -->
<!-- 					</bean> -->
<!-- 				</property> -->
<!-- 			</bean> -->
<!-- 		</property> -->
<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"  >
        <property name="resource" value="file:res/inputs/Details.txt" />
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
	 			<property name="lineTokenizer">
	            	<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	              	         <property name="delimiter" value="-"/>
	                	<property name="names" value="name,address,mobileno,dob,email,zip,country,state,account,credit" />
	                </bean>
	            </property>
	            <property name="fieldSetMapper">
	            	<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
	               		<property name="prototypeBeanName" value="domain" />
	           		</bean>
				</property>
      		</bean>
         </property>
</bean>
                 


<!-- <bean id="Tokenizer"   class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer"> -->
<!--     <property name="tokenizers"> -->
<!--         <map> -->
<!--             <entry key="HDR*" value-ref="header" /> -->
<!--             <entry key="880*" value-ref="data" /> -->
            
<!--         </map> -->
<!--     </property> -->
<!-- </bean> -->

 
<!-- 	<bean id="header" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer"> -->
<!--        				 <property name="names" value="regional,citiplus,product,code,file" /> -->
<!--         			 <property name="columns" value="1-20, 21-29, 30-37,  38-42, 43-46" /> -->
<!--    	</bean> -->
   	
<!--    		<bean id="data" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer"> -->
<!--        				 <property name="names" value="regional,citiplus,product,code,file" /> -->
<!--         			 <property name="columns" value="1-19, 20-42, 43-74,  75-80, 81-110" /> -->
<!--    	</bean> -->
   					



	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">

		<property name="resource" value="file:res/outputs/out.all.txt" />
		<property name="appendAllowed" value="true" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
				 
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="name,address,mobileno,dob,email,zip,country,state,account,credit" />
					</bean>
				</property>
				
				 <property name="format" value="%-19s%-23s%-32s%-6s%-30s" /> 
			</bean>
		</property>

	</bean>

</beans>
 

